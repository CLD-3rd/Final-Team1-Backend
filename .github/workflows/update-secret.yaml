name: Inject RDS/Redis into SealedSecret

on:
  push:
    branches:
      - dev-terraform
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  inject-secrets:
    runs-on: ubuntu-latest
    env:
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install kubeseal
        run: |
          KUBESEAL_VERSION=0.26.1
          curl -L -o kubeseal https://github.com/bitnami-labs/sealed-secrets/releases/download/v${KUBESEAL_VERSION}/kubeseal-linux-amd64
          chmod +x kubeseal
          sudo mv kubeseal /usr/local/bin/kubeseal
      - name: Verify kubeseal
        run: |
          kubeseal --version
          

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Check Terraform CLI
        run: terraform --version

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::194722398200:role/Team1-github-role
          aws-region: ap-northeast-2

      - name: Init Terraform for output
        run: |
          cd terraform/
          terraform init -input=false

      - name: Get Terraform Outputs
        run: |
          cd terraform/
          terraform init -input=false
          
          DB_HOST=$(terraform output -raw rds_endpoint | tr -d '\r')
          REDIS_HOST=$(terraform output -raw redis_endpoint | tr -d '\r')

          if [ -z "$DB_HOST" ] || [ -z "$REDIS_HOST" ]; then
            echo "Terraform output 값을 찾을 수 없습니다."
            terraform output
            exit 1
          fi

          echo "::notice::DB_HOST=$DB_HOST"
          echo "::notice::REDIS_HOST=$REDIS_HOST"


          echo "DB_HOST<<EOF" >> $GITHUB_ENV
          echo "$DB_HOST" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Generate Sealed Secret
        run: |
          DB_URL="jdbc:mysql://${DB_HOST}:3306/mindscape?serverTimezone=Asia/Seoul"
          export DB_URL REDIS_HOST
          envsubst < ./manifest/msa/sealed-secret-add.yaml > sealed-secret.yaml
          
          kubeseal \
            --controller-name=sealed-secrets-controller \
            --controller-namespace=kube-system \
            --format=yaml \
            < sealed-secret.yaml > sealed-secret-final.yaml

      - name: Apply Sealed Secret to cluster
        run: |
          kubectl apply -f sealed-secret-final.yaml